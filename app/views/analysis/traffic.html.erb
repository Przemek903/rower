<div class="container-fluid">
  <div class="row bikeRoutes">
    <div class="col-md-1"></div>
    <div class="col-md-10">
      <h3>Mapa przemieszczń</h3>
      <div class="row">
        <div id="map" style='width: 100%; height: 550px;'></div>
        <div>
          <h3>10 najczęstszych połączeń</h3>
          <table class="table table-striped">
            <thead>
              <tr>
                <th>Kalster A</th>
                <th>Kalster B</th>
                <th>A -> B</th>
                <th>B -> A</th>
                <th>Całkowita liczba przemieszczeń</th>
              </tr>
            </thead>
            <tbody>
              <% @mostUsedTrafficsTwoWays.each do |mostTraffic| %>
                <tr>
                  <td><%= mostTraffic.stationA_id %> - ( okolice <%= Station.where(clusterKMean_id: mostTraffic.stationA_id).first.name %> )</td>
                  <td><%= mostTraffic.stationB_id %> - ( okolice <%= Station.where(clusterKMean_id: mostTraffic.stationB_id).first.name %> )</td>
                  <td><%= mostTraffic.fromFirstToSecond %></td>
                  <td><%= mostTraffic.formSecondToFirst %></td>
                  <td><%= mostTraffic.totalCount %></td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
        <div>
          <h3>10 klastór o największej liczbie zwrotów</h3>
          <table class="table table-striped">
            <thead>
              <tr>
                <th>Kalster</th>
                <th>Liczba przybyłych rowerów</th>
              </tr>
            </thead>
            <tbody>
              <% @topImport.first(10).each do |clusterNumber, totalImport| %>
                <tr>
                  <td><%= clusterNumber %> - ( okolice <%= Station.where(clusterKMean_id: clusterNumber).first.name %> )</td>
                  <td><%= totalImport %> </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
        <div>
          <h3>10 klastór o największej liczbie wypożyczeń</h3>
          <table class="table table-striped">
            <thead>
              <tr>
                <th>Kalster</th>
                <th>Liczba rowerów, które wyjechały z klastra</th>
              </tr>
            </thead>
            <tbody>
              <% @topExport.first(10).each do |clusterNumber, totalExport| %>
                <tr>
                  <td><%= clusterNumber %> - ( okolice <%= Station.where(clusterKMean_id: clusterNumber).first.name %> )</td>
                  <td><%= totalExport %> </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
    </div>
  </div>
</div>
</div>


<script type="text/javascript">
var center = new google.maps.LatLng(52.2359212,20.996984);
var map = new google.maps.Map(document.getElementById('map'), {
   center: center,
   zoom: 11
});

var infowindow = new google.maps.InfoWindow({
  map: map
});

var bounds = new google.maps.LatLngBounds();

// start coordinates
var start = <%= @startAndLineProperties %>

// end coordinates
var end = <%= @end %>

var lineColor = <%= raw @lineColor.to_json %>

var clusterCount = <%= raw @clusterInfo.to_json %>

function initialize() {
    for (var i=0; i < end.length; i++){

      calcRoute(start[i], end [i], start[i][2], lineColor[i], clusterCount[i]);
    }
}


function calcRoute(source,destination, lineWeight, lineColor, clusterCount){

  var flightPlanCoordinates = [
          {lat: source[0], lng: source[1]},
          {lat: destination[0], lng: destination[1]}
        ];
  var polyline = new google.maps.Polyline({
          path: flightPlanCoordinates,
          geodesic: true,
          strokeColor: lineColor,
          strokeOpacity: 1.0,
          strokeWeight: lineWeight
        });
  polyline.setMap(map);

  var toolTip = '<div id="map-box">'+
 '<div id="siteNotice">'+
 '</div>'+
 '<h3 id="firstHeading" class="firstHeading">Liczba przemieszczeń</h1>'+
 '<div id="bodyContent">'+
 '<p>Kalster A - okolice '+
 clusterCount[4] + '</p>'+
 '<p>Klaster B - okolice '+
 clusterCount[5] + '</p>'+
 '<p>A -> B - '+
 clusterCount[0] +' przemieszczeń </p>'+
 '<p>B -> A - '+
 clusterCount[1] +' przemieszczeń</p>'+
 '</div>'+
 '</div>';

   var polygons = new google.maps.Polygon({
          paths: <%= raw @kmeans.to_json %>,
          strokeColor: '#858585',
          strokeOpacity: 0.01,
          strokeWeight: 2,
          fillOpacity: 0.01,
          fillColor: "#000000"
        });
        polygons.setMap(map)

  google.maps.event.addListener(polyline, 'click', function(event) {
    infowindow.setContent(toolTip);
    infowindow.setPosition(event.latLng);
    infowindow.open(map);
  });
}
google.maps.event.addDomListener(window, 'load', initialize);


</script>
